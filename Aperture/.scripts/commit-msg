#!/bin/bash
# Git hook to enforce Conventional Commits format
# Install: ln -s ../../.scripts/commit-msg .git/hooks/commit-msg
# Or use: chmod +x .scripts/commit-msg && cp .scripts/commit-msg .git/hooks/

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Skip if commit message was generated by /commit command (has co-author)
if echo "$COMMIT_MSG" | grep -q "Co-Authored-By: Claude"; then
  exit 0
fi

# Skip merge commits
if echo "$COMMIT_MSG" | grep -qE "^Merge "; then
  exit 0
fi

# Check for Conventional Commits format
# Format: type(scope): description
# Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert
if ! echo "$COMMIT_MSG" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+"; then
  echo ""
  echo "‚ùå Commit message doesn't follow Conventional Commits format"
  echo ""
  echo "Expected format:"
  echo "  type(scope): description"
  echo ""
  echo "Valid types:"
  echo "  feat     - New feature"
  echo "  fix      - Bug fix"
  echo "  docs     - Documentation changes"
  echo "  style    - Code formatting (no logic change)"
  echo "  refactor - Code refactoring"
  echo "  test     - Adding or updating tests"
  echo "  chore    - Maintenance tasks"
  echo "  perf     - Performance improvements"
  echo "  ci       - CI/CD changes"
  echo "  build    - Build system changes"
  echo "  revert   - Revert previous commit"
  echo ""
  echo "Examples:"
  echo "  feat(auth): add OAuth2 login"
  echo "  fix(api): resolve timeout in data fetch"
  echo "  docs: update README with setup instructions"
  echo ""
  echo "üí° TIP: Use /commit command in Claude Code to generate proper message"
  echo ""
  exit 1
fi

# All checks passed
exit 0
