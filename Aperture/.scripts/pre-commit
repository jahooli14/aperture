#!/bin/bash
# Pre-commit hook to ensure documentation is updated when code changes
# Install: chmod +x .scripts/pre-commit && ln -sf ../../.scripts/pre-commit .git/hooks/pre-commit

set -e

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only)

# Check if any code files are being committed
CODE_CHANGED=false
if echo "$STAGED_FILES" | grep -qE "(src/|api/|lib/|components/|pages/|hooks/|stores/|utils/|\.ts$|\.tsx$|\.js$|\.jsx$)"; then
  CODE_CHANGED=true
fi

# Check if package.json changed (dependency updates)
DEPS_CHANGED=false
if echo "$STAGED_FILES" | grep -qE "package\.json$"; then
  DEPS_CHANGED=true
fi

# Check if docs were updated
DOCS_UPDATED=false
if echo "$STAGED_FILES" | grep -qE "(NEXT_SESSION\.md|README\.md|CLAUDE.*\.md|\.process/.*\.md)"; then
  DOCS_UPDATED=true
fi

# If code changed but docs weren't updated, prompt user
if [ "$CODE_CHANGED" = true ] && [ "$DOCS_UPDATED" = false ]; then
  echo ""
  echo -e "${YELLOW}⚠️  Code changes detected without documentation updates${NC}"
  echo ""
  echo "Changed files:"
  echo "$STAGED_FILES" | grep -E "(src/|api/|lib/|components/|pages/|hooks/|stores/|utils/|\.ts$|\.tsx$|\.js$|\.jsx$)" | sed 's/^/  - /'
  echo ""
  echo "Consider updating:"
  echo "  - NEXT_SESSION.md (current work status)"
  echo "  - projects/[name]/NEXT_SESSION.md (project-specific status)"
  echo "  - README.md (if public API changed)"
  echo ""
  echo -e "${YELLOW}Did you update documentation? (y/n/skip)${NC}"
  read -r response

  case "$response" in
    [yY]|[yY][eE][sS])
      echo -e "${GREEN}✓ Proceeding with commit${NC}"
      ;;
    [sS]|[sS][kK][iI][pP])
      echo -e "${YELLOW}⚠ Skipping doc check - remember to update later!${NC}"
      ;;
    *)
      echo -e "${RED}✗ Commit cancelled - update docs first${NC}"
      echo ""
      echo "Quick fix:"
      echo "  1. Update NEXT_SESSION.md with what you changed"
      echo "  2. Stage the updated file: git add NEXT_SESSION.md"
      echo "  3. Try commit again"
      exit 1
      ;;
  esac
fi

# If dependencies changed but docs weren't updated, warn
if [ "$DEPS_CHANGED" = true ] && [ "$DOCS_UPDATED" = false ]; then
  echo ""
  echo -e "${YELLOW}⚠️  package.json changed - consider updating NEXT_SESSION.md${NC}"
  echo ""
fi

# All checks passed
echo -e "${GREEN}✓ Pre-commit checks passed${NC}"
exit 0
